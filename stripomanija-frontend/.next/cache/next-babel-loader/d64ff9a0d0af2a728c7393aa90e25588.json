{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\demoFrontProjekat\\\\nextjs-blog\\\\components\\\\ColorChangingButton\\\\ColorChangingButton.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport \"./ColorChangingButton.module.css\";\n\nconst ColorChangingButton = () => {\n  const colors = [\"#9097d7\", \"#e2d489\", \"#a21e21\", \"#a9124c\", \"#52c436\", \"#d45629\", \"#553a36\"];\n  const {\n    0: currentColor,\n    1: setCurrentColor\n  } = useState(colors[0]);\n  return __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    style: {\n      backgroundColor: currentColor\n    },\n    onClick: () => handleColorChange(currentColor, setCurrentColor, colors),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, \"Click me!\");\n}; //ovdje mozemo izmijeniti state komponente. Za strebere poput mene - ovo ovdje je duboko kopiranje (sa tp-a), dakle kada sa setCurrentColor promijenite\n//stanje currentColor, ono ce biti izmijenjeno i u ColorChangingButton, ne samo u onClick funkciji (iako je ona skroz izvan)\n\n\nconst handleColorChange = (currentColor, setCurrentColor, colors) => {\n  const prevColor = currentColor;\n  let randomBroj = Math.floor(Math.random() * colors.size());\n  setCurrentColor(colors[randomBroj]);\n  console.log(\"Promijenjena boja iz \" + prevColor + \" u \" + currentColor);\n};\n\nexport default ColorChangingButton;","map":{"version":3,"sources":["C:/Users/USER/Desktop/demoFrontProjekat/nextjs-blog/components/ColorChangingButton/ColorChangingButton.js"],"names":["React","useState","ColorChangingButton","colors","currentColor","setCurrentColor","backgroundColor","handleColorChange","prevColor","randomBroj","Math","floor","random","size","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,kCAAP;;AAEA,MAAMC,mBAAmB,GAAG,MAAI;AAC5B,QAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,CAAf;AACA,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCJ,QAAQ,CAACE,MAAM,CAAC,CAAD,CAAP,CAAhD;AACA,SACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,iBAAhC;AACQ,IAAA,KAAK,EAAE;AAACG,MAAAA,eAAe,EAACF;AAAjB,KADf;AAEQ,IAAA,OAAO,EAAE,MAAIG,iBAAiB,CAACH,YAAD,EAAeC,eAAf,EAAgCF,MAAhC,CAFtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ;AAKH,CARD,C,CAUA;AACA;;;AACA,MAAMI,iBAAiB,GAAG,CAACH,YAAD,EAAeC,eAAf,EAAgCF,MAAhC,KAAyC;AAC/D,QAAMK,SAAS,GAAGJ,YAAlB;AACA,MAAIK,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBT,MAAM,CAACU,IAAP,EAA3B,CAAjB;AACAR,EAAAA,eAAe,CAACF,MAAM,CAACM,UAAD,CAAP,CAAf;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BP,SAA1B,GAAsC,KAAtC,GAA8CJ,YAA1D;AACH,CALD;;AAOA,eAAeF,mBAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport \"./ColorChangingButton.module.css\";\r\n\r\nconst ColorChangingButton = ()=>{\r\n    const colors = [\"#9097d7\", \"#e2d489\", \"#a21e21\", \"#a9124c\", \"#52c436\", \"#d45629\", \"#553a36\"];\r\n    const [currentColor, setCurrentColor] = useState(colors[0]);\r\n    return(\r\n        <button type=\"button\" className=\"btn btn-primary\"\r\n                style={{backgroundColor:currentColor}}\r\n                onClick={()=>handleColorChange(currentColor, setCurrentColor, colors)}>Click me!</button>\r\n    );\r\n}\r\n\r\n//ovdje mozemo izmijeniti state komponente. Za strebere poput mene - ovo ovdje je duboko kopiranje (sa tp-a), dakle kada sa setCurrentColor promijenite\r\n//stanje currentColor, ono ce biti izmijenjeno i u ColorChangingButton, ne samo u onClick funkciji (iako je ona skroz izvan)\r\nconst handleColorChange = (currentColor, setCurrentColor, colors)=>{\r\n    const prevColor = currentColor;\r\n    let randomBroj = Math.floor(Math.random() * colors.size());\r\n    setCurrentColor(colors[randomBroj]);\r\n    console.log(\"Promijenjena boja iz \" + prevColor + \" u \" + currentColor);\r\n}\r\n\r\nexport default ColorChangingButton;"]},"metadata":{},"sourceType":"module"}