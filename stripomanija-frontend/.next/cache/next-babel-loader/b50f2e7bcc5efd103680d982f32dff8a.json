{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\demoFrontProjekat\\\\nextjs-blog\\\\components\\\\InfoCard\\\\InfoCard.js\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport styles from \"./InfoCard.module.css\"; //ovo je primjer veoma jednostavne komponente koja ima malo stajlinga i neke staticne informacije\n//props su pomocne informacije koje parent komponenta salje child komponenti\n//u angularu i vuejs child komponenta moze roditelju da salje propove takodjer - u reactu toga nema, to se rjesava na neke okolo kole nacine ako se za tim ukaze potreba\n\nvar InfoCard = function InfoCard(_ref) {\n  var children = _ref.children,\n      name = _ref.name,\n      surname = _ref.surname;\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"card border-primary mb-3\",\n    style: {\n      maxWidth: \"250px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"card-header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }\n  }, \"Some title\"), __jsx(\"div\", {\n    className: \"card-body\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }, __jsx(\"h4\", {\n    className: \"card-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 21\n    }\n  }, name, \" \", surname), __jsx(\"p\", {\n    className: \"card-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  }, children))));\n};\n\nexport default InfoCard;","map":{"version":3,"sources":["C:/Users/USER/Desktop/demoFrontProjekat/nextjs-blog/components/InfoCard/InfoCard.js"],"names":["React","styles","InfoCard","children","name","surname","container","maxWidth"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,uBAAnB,C,CAEA;AAEA;AACA;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA6B;AAAA,MAA3BC,QAA2B,QAA3BA,QAA2B;AAAA,MAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,MAAXC,OAAW,QAAXA,OAAW;AAC1C,SACI;AAAK,IAAA,SAAS,EAAEJ,MAAM,CAACK,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,0BAAf;AAA0C,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BH,IAA5B,OAAmCC,OAAnC,CADJ,EAEI;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BF,QAA1B,CAFJ,CAFJ,CADJ,CADJ;AAYH,CAbD;;AAeA,eAAeD,QAAf","sourcesContent":["import React from \"react\";\r\nimport styles from \"./InfoCard.module.css\";\r\n\r\n//ovo je primjer veoma jednostavne komponente koja ima malo stajlinga i neke staticne informacije\r\n\r\n//props su pomocne informacije koje parent komponenta salje child komponenti\r\n//u angularu i vuejs child komponenta moze roditelju da salje propove takodjer - u reactu toga nema, to se rjesava na neke okolo kole nacine ako se za tim ukaze potreba\r\n\r\nconst InfoCard = ({children, name, surname})=>{\r\n    return(\r\n        <div className={styles.container}>\r\n            <div className=\"card border-primary mb-3\" style={{maxWidth: \"250px\"}}>\r\n                <div className=\"card-header\">Some title</div>\r\n                <div className=\"card-body\">\r\n                    <h4 className=\"card-title\">{name} {surname}</h4>\r\n                    <p className=\"card-text\">{children}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default InfoCard;"]},"metadata":{},"sourceType":"module"}